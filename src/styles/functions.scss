@use "sass:math";

@function rem($pixels, $context: 16) {
	@return (math.div($pixels, $context)) * 1rem;
}

$maxWidth: 1920;
@mixin adaptiv-font($pcSize, $mobSize) {
 $addSize: $pcSize - $mobSize;
 $maxWidth: $maxWidth - 480;
 font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 480px) / #{$maxWidth}));
}
// @include adaptiv-font(100, 72);
@mixin adaptiv-width($pcSize, $mobSize) {
	$addSize: $pcSize - $mobSize;
	$maxWidth: $maxWidth - 320;
	width: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth}));
}
// @include adaptiv-width(100, 72);
@mixin adaptiv-height($pcSize, $mobSize) {
$addSize: $pcSize - $mobSize;
$maxWidth: $maxWidth - 320;
height: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth}));
}
  // @include adaptiv-height(100, 72);

@mixin adaptive-value($property, $startSize, $minSize, $type){
$addSize: $startSize - $minSize;
@if $type== 1 {
	//тільки якщо меньше контейнера
		#{$property}: $startSize + px;
		@media(max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
}
}
@else if $type== 2{
	#{$property}: $startSize + px;
	@media(min-width: #{$maxWidthContainer + px}) {
		#{$property}: calc(#{$minSize + px } + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	}
@else {
	#{$property}: calc(#{$minSize + px } + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320} ));
	}
}
//  @include adaptive-value("padding", 50, 20, 0);